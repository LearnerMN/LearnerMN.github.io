{
  "name": "Рекурент харьцаа ба матриц",
  "tagline": "алгоритм",
  "body": "### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n\r\n\r\n```C++\r\n#include <vector>\r\n#include <iostream>\r\n\r\nint MOD = 1000000007;\r\nusing namespace std;\r\n// Matrix class\r\nclass Matrix{\r\n    public:\r\n        int N; // Matrix size\r\n        vector< vector< long long > > data; // matrix values\r\n\r\n        Matrix(int N); // constructor resize N matrix\r\n        Matrix(const Matrix &matrix); // constructor assign matrix values\r\n\r\n        const Matrix &operator=(const Matrix &A); // assign operator\r\n        const Matrix operator*(const Matrix &A); // product operator\r\n        const Matrix operator^(int P ); // pow operator\r\n\r\n        ~Matrix(); \r\n};\r\n\r\nMatrix::Matrix(int N){\r\n    this->N = N;\r\n    data = vector< vector< long long > >(N, vector< long long >(N));\r\n}\r\n\r\nMatrix::Matrix(const Matrix &A){\r\n    this->N = A.N;\r\n    data = vector< vector< long long > >(A.data);\r\n}\r\nMatrix::~Matrix(){\r\n    data.clear();\r\n}\r\n\r\nconst Matrix &Matrix::operator=(const Matrix &A){\r\n    if( &A != this ){\r\n        data.clear();\r\n        N = A.N;\r\n        data = vector< vector< long long > >(A.data);\r\n    }\r\n    return *this;\r\n}\r\nconst Matrix Matrix::operator*(const Matrix &A){\r\n    Matrix C(A.N);\r\n    for( int i = 0; i < A.N; ++i )\r\n        for( int j = 0; j < A.N; ++j ){\r\n            for( int k = 0; k < A.N; ++k )\r\n                C.data[i][j] = (C.data[i][j] + data[i][k] * A.data[k][j])%MOD;\r\n        }\r\n    return C;\r\n}\r\n\r\nconst Matrix Matrix::operator^(int P){\r\n    if(P == 1) return (*this);\r\n    if(P & 1) return ((*this) * ((*this) ^ (P-1)));\r\n    Matrix B = ((*this) ^ (P/2));\r\n    return (B*B);\r\n}\r\n\r\nlong long value(Matrix &matrix,int P,vector< int > &def){\r\n    if (P <= def.size())\r\n        return def[P-1];\r\n    Matrix res = matrix^(P-def.size());\r\n    return ((res.data[0][0] * def[1])%MOD + (res.data[0][1] * def[0])%MOD)%MOD;\r\n}\r\n\r\n// main\r\nint main(){\r\n\r\n    vector< int > def = {4,14};\r\n\r\n    Matrix matrix(2);\r\n    matrix.data[0][0] = 3; matrix.data[0][1] = 2;\r\n    matrix.data[1][0] = 1; matrix.data[1][1] = 0;\r\n\r\n    int t;\r\n    cin>>t;\r\n    while (t--){\r\n        int n;\r\n        cin>>n;\r\n        cout<<value(matrix,n,def)<<endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n### Бие дааж бодох бодлогууд\r\n<a href=\"http://www.spoj.com/CSMS/problems/MSR10_04/\"> Үг </a><br>\r\n<a href=\"http://www.spoj.com/CSMS/problems/TSEREG/\"> Цэрэг </a><br>\r\n<a href=\"https://uva.onlinejudge.org/external/108/p10870.pdf\"> UVa 10870 : Recurrences </a><br>\r\n<a href=\"https://uva.onlinejudge.org/external/115/p11551.pdf\"> UVa 11551 : Experienced Endeavour </a><br>\r\n<a href=\"http://www.spoj.com/CSMS/problems/NEIGH/\"> Хөршүүд </a>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}